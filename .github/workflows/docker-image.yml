name: Docker Image CI

on:
  push:
    branches: [ "main" ]  # Ejecutar workflow cuando haya un push en la rama "main"
  pull_request:
    branches: [ "main" ]  # Ejecutar workflow cuando se cree una pull request hacia la rama "main"

jobs:
  build:
    runs-on: ubuntu-latest  # Utiliza la última versión de Ubuntu como entorno de ejecución

    steps:
    # Paso 1: Descargar el código fuente del repositorio
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Clona todo el historial de git (necesario para el versionado semántico)

    # Paso 2: Obtener la versión semántica basada en los mensajes de commit
    - name: Git Semantic Version
      uses: PaulHatch/semantic-version@v4.0.3
      with:
        major_pattern: "major:"
        minor_pattern: "feat:"
        format: "${major}.${minor}.${patch}${increment}"
      id: version

    # Paso 3: Configurar Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Paso 4: Configurar caché de Docker para acelerar la construcción
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    # Paso 5: Iniciar sesión en Docker Hub
    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin

    # Paso 6: Construir la imagen de Docker
    - name: Build Docker Image
      env:
        NEW_VERSION: ${{ steps.version.outputs.version }}
      run: |
        docker buildx build \
          --cache-from type=local,src=/tmp/.buildx-cache \
          --cache-to type=local,dest=/tmp/.buildx-cache,mode=max \
          -t alorpes/deepdive-record-api:$NEW_VERSION \
          -t alorpes/deepdive-record-api:latest \
          --push .

    # Paso 7: Subir la imagen a Docker Hub (esto ya se hace en el paso anterior con --push)
